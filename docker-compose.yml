services:

  rabbitmq:
    image: rabbitmq:4.0.2
    hostname: ${RABBITMQ_HOST}
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - /mnt/sdb/rabbitmq:/var/lib/rabbitmq
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
    networks:
      - backend

  redis:
    image: redis:latest
    hostname: ${REDIS_HOST}
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /mnt/sdb/redis:/root/redis

  anchoring-handler:
    build:
      context: ./itn-anchoring-handler
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 10
    networks:
      - backend
    depends_on:
      - rabbitmq
    restart: always
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}
      AZURE_DATA_TABLE_CONNECTION_STRING: ${AZURE_DATA_TABLE_CONNECTION_STRING}
      AZURE_DATA_TABLE_SAS: ${AZURE_DATA_TABLE_SAS}
      AZURE_DATA_TABLE_NAME: ${AZURE_DATA_TABLE_NAME}
      XENDATA_SERVER: ${XENDATA_SERVER}
      XENDATA_DATABASE: ${XENDATA_DATABASE}
      XENDATA_USER: ${XENDATA_USER}
      XENDATA_PASSWORD: ${XENDATA_PASSWORD}
      ANCHORING_URL: ${ANCHORING_URL}
      ANCHORING_KEY: ${ANCHORING_KEY}
      REDIS_HOST: ${REDIS_HOST}
    volumes:
      - /mnt/mxfs/Archive:/anchoring-handler/periphery
      - /mnt/sdb/logs:/anchoring-handler/logs

  anchoring-api:
    container_name: anchoring-api
    hostname: anchoring-api
    build:
      context: ./itn-anchoring-api
      dockerfile: Dockerfile
    networks:
      - backend
    depends_on:
      - rabbitmq
    ports:
      - 3002:3001
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_QUEUE_NAME: ${RABBITMQ_QUEUE_NAME}

networks:
  backend:
    driver: bridge    
